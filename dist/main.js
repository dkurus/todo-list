(()=>{"use strict";var e={28:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(537),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([e.id,".contentWrapper{\n    border: 2px solid black;\n    display: flex;\n    flex-wrap: wrap;\n}\n\n.pageHeader {\n    border: 2px solid rgb(241, 15, 15);\n    flex-basis: 100%;\n}\n\n.projectNav {\n    padding-right: 100px;\n}\n\n.newTaskCard > form {\n    display: flex;\n    flex-direction: column;\n}\n\n.taskSimpleCard {\n    border-bottom: 1px solid rgba(211,211,211);\n\n}\n\n.taskCardTitle {\n    font-size: large;\n    margin-top: 5px;\n    margin-bottom: 5px;\n}\n\n.taskCardDescription {\n    font-size: medium;\n    margin-top: 5px;\n    margin-bottom: 5px;\n}\n\n.taskCardDueDate {\n    font-size: small;\n    margin-top: 5px;\n    margin-bottom: 5px;\n}\n\n.focusViewWrap {\n    display: flex;\n}\n\n.focusViewCard {\n    display: flex;\n    flex-direction: column;\n    \n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,uBAAuB;IACvB,aAAa;IACb,eAAe;AACnB;;AAEA;IACI,kCAAkC;IAClC,gBAAgB;AACpB;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,0CAA0C;;AAE9C;;AAEA;IACI,gBAAgB;IAChB,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;IACjB,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;;AAE1B",sourcesContent:[".contentWrapper{\n    border: 2px solid black;\n    display: flex;\n    flex-wrap: wrap;\n}\n\n.pageHeader {\n    border: 2px solid rgb(241, 15, 15);\n    flex-basis: 100%;\n}\n\n.projectNav {\n    padding-right: 100px;\n}\n\n.newTaskCard > form {\n    display: flex;\n    flex-direction: column;\n}\n\n.taskSimpleCard {\n    border-bottom: 1px solid rgba(211,211,211);\n\n}\n\n.taskCardTitle {\n    font-size: large;\n    margin-top: 5px;\n    margin-bottom: 5px;\n}\n\n.taskCardDescription {\n    font-size: medium;\n    margin-top: 5px;\n    margin-bottom: 5px;\n}\n\n.taskCardDueDate {\n    font-size: small;\n    margin-top: 5px;\n    margin-bottom: 5px;\n}\n\n.focusViewWrap {\n    display: flex;\n}\n\n.focusViewCard {\n    display: flex;\n    flex-direction: column;\n    \n}"],sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<e.length;d++){var u=[].concat(e[d]);r&&i[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),a&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=a):u[4]="".concat(a)),t.push(u))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([o]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},i=[],s=0;s<e.length;s++){var c=e[s],d=r.base?c[0]+r.base:c[0],u=o[d]||0,p="".concat(d," ").concat(u);o[d]=u+1;var l=n(p),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==l)t[l].references++,t[l].updater(m);else{var A=a(m,r);r.byIndex=s,t.splice(s,0,{identifier:p,updater:A,references:1})}i.push(p)}return i}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=n(o[i]);t[s].references--}for(var c=r(e,a),d=0;d<o.length;d++){var u=n(o[d]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}o=c}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{const e=(()=>{let e=[{name:"name1",description:"des1",dueDate:"due1",id:0},{name:"name2",description:"des2",dueDate:"due2",id:1}];return{add:t=>{e.push(t)},remove:t=>{e.forEach(((n,r)=>{n.id==t&&e.splice(r,1)}))},getCurrentArr:()=>[...e],getTaskById:t=>e.filter((e=>t===e.id))}})(),t=(e,t,n,r="default",a,o)=>({name:e,description:t,note:n,project:r,priority:a,dueDate:o}),r=(()=>{let e=[];return{assignID:t=>{t.id=(()=>{const t=0===e.length?-1:e[e.length-1];return e.push(t+1),t+1})()},removeID:t=>{e=e.filter((e=>e!==t))},getList:()=>{console.log(e)}}})(),a=()=>{const n=o(),a=t(n.name,n.description,n.notes,"default","important",n.dueDate);r.assignID(a),e.add(a)},o=()=>({name:document.querySelector("input[name='taskName']").value,description:document.querySelector("input[name='taskDescription']").value,notes:document.querySelector("textArea[name='taskNotes']").value,dueDate:document.querySelector("input[name='dueDate']").value}),i=()=>{e.getCurrentArr().forEach((e=>(e=>{const t=document.querySelector(".tasksInnerWrap"),n=document.createElement("div");n.setAttribute("class","taskSimpleCard"),n.setAttribute("data-id",`${e.id}`),document.createElement("button").setAttribute("class","markCompleteBtn");const r=document.createElement("p");r.setAttribute("class","taskCardTitle"),r.innerHTML=e.name;const a=document.createElement("p");a.setAttribute("class","taskCardDescription"),a.innerHTML=e.description;const o=document.createElement("p");o.setAttribute("class","taskCardDueDate"),o.innerHTML=e.dueDate,t.appendChild(n),n.appendChild(r),n.appendChild(a),n.appendChild(o)})(e)))};var s=n(379),c=n.n(s),d=n(795),u=n.n(d),p=n(569),l=n.n(p),m=n(565),A=n.n(m),f=n(216),b=n.n(f),C=n(589),h=n.n(C),v=n(28),g={};g.styleTagTransform=h(),g.setAttributes=A(),g.insert=l().bind(null,"head"),g.domAPI=u(),g.insertStyleElement=b(),c()(v.Z,g),v.Z&&v.Z.locals&&v.Z.locals,(()=>{const e=document.createElement("div");e.classList.add("contentWrapper");const t=document.createElement("header");t.classList.add("pageHeader"),t.innerHTML="this is the header";const n=document.createElement("div");n.classList.add("projectNav");const r=document.createElement("nav");r.innerHTML="this is the project list";const a=document.createElement("div"),o=document.createElement("header");o.innerHTML="active project Name";const i=document.createElement("div");i.setAttribute("class","tasksInnerWrap");const s=document.createElement("div"),c=document.createElement("button");c.innerHTML="New Task";const d=document.createElement("div");d.classList.add("newTaskCard");const u=document.createElement("form");u.setAttribute("id","newTaskForm");const p=document.createElement("input");p.setAttribute("type","text"),p.setAttribute("name","taskName"),p.setAttribute("placeholder","e.g., Pay internet bill"),p.setAttribute("required","");const l=document.createElement("input");l.setAttribute("type","text"),l.setAttribute("name","taskDescription"),l.setAttribute("placeholder","description");const m=document.createElement("textArea");m.setAttribute("type","text"),m.setAttribute("name","taskNotes"),m.setAttribute("placeholder","comments");const A=document.createElement("input");A.setAttribute("name","dueDate"),A.setAttribute("type","date");const f=document.createElement("label");f.setAttribute("for","dueDate"),f.innerHTML="Due date:";const b=document.createElement("button");b.setAttribute("id","newTaskSubmit"),b.setAttribute("type","submit"),b.innerHTML="save";const C=document.createElement("button");C.setAttribute("id","newTaskCancel"),C.setAttribute("type","button"),C.innerHTML="cancel",document.body.appendChild(e),e.appendChild(t),e.appendChild(n),e.appendChild(a),n.appendChild(r),a.appendChild(o),a.appendChild(i),a.appendChild(s),s.appendChild(c),s.appendChild(d),d.appendChild(u),u.appendChild(p),u.appendChild(l),u.appendChild(m),u.appendChild(f),u.appendChild(A),u.appendChild(b),u.appendChild(C)})(),document.querySelector("button[id='newTaskSubmit']").addEventListener("click",(e=>{e.preventDefault(),""!==document.querySelector("input[name='taskName']").value&&(a(),document.querySelector("form[id='newTaskForm']").reset())})),document.querySelector("button[id='newTaskSubmit']").addEventListener("click",(()=>{document.querySelector("div[class='tasksInnerWrap']").innerHTML="",i(),console.log(e.getCurrentArr())})),document.querySelector(".tasksInnerWrap").addEventListener("click",(t=>{const n=t.target.closest("[data-id]").getAttribute("data-id");console.log(n),(t=>{const n=e.getTaskById(t);console.log(n);const r=document.createElement("div");r.setAttribute("class","focusViewWrap");const a=document.createElement("div");a.setAttribute("class","focusViewCard");const o=document.createElement("button");o.innerHTML="x",document.createElement("form").setAttribute("id","focusViewForm");const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("name","focusTaskName"),i.setAttribute("placeholder","e.g., Pay internet bill"),i.setAttribute("required",""),i.innerHTML=`${n.name}`;const s=document.createElement("input");s.setAttribute("type","text"),s.setAttribute("name","focusTaskDescription"),s.setAttribute("placeholder","description"),s.innerHTML=`${n.description}`;const c=document.createElement("textArea");c.setAttribute("type","text"),c.setAttribute("name","focusTaskNotes"),c.setAttribute("placeholder","comments"),c.innerHTML=`${n.notes}`;const d=document.createElement("input");d.setAttribute("name","focusDueDate"),d.setAttribute("type","date"),d.innerHTML=`${n.dueDate}`;const u=document.createElement("label");u.setAttribute("for","focusDueDate"),u.innerHTML="Due date:";const p=document.createElement("button");p.setAttribute("id","newTaskCancel"),p.setAttribute("type","button"),p.innerHTML="delete";const l=document.createElement("button");l.setAttribute("id","newTaskSubmit"),l.setAttribute("type","submit"),l.innerHTML="save",document.body.appendChild(r),r.appendChild(a),a.appendChild(o),a.appendChild(i),a.appendChild(s),a.appendChild(c),a.appendChild(d),a.appendChild(u),a.appendChild(p),a.appendChild(l)})(n)})),i(),e.getCurrentArr()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,